import boto3
from botocore.exceptions import BotoCoreError, ClientError
from flask import jsonify, request, Response, send_file
import os
import uuid
import openai
import time
import datetime

from app import app, db, login_required
from app.models import User, Message

# Amazon Polly client initialization
polly_client = boto3.Session(
    aws_access_key_id='YOUR_AWS_ACCESS_KEY_ID',
    aws_secret_access_key='YOUR_AWS_SECRET_ACCESS_KEY',
    region_name='YOUR_AWS_REGION_NAME'
).client('polly')

# OpenAI API credentials and model name
OPENAI_API_KEY = 'YOUR_OPENAI_API_KEY'
MODEL_NAME = 'YOUR_OPENAI_MODEL_NAME'
openai.api_key = OPENAI_API_KEY
model_engine = openai.Model.engine(MODEL_NAME)

@app.route('/talkgpt')
@login_required
def talkgpt():
    # Retrieve all chat messages from the database
    messages = Message.query.order_by(Message.created_at.asc()).all()
    chat_history = [{"id": m.id, "content": m.content} for m in messages]

    completion = openai.Completion.create(
        engine=model_engine,
        prompt="Hello!",
        max_tokens=3000,
        n=1,
        stop=None,
        temperature=0.6,
    )
    response = completion.choices[0].text.strip()
    audio_file_name = generate_audio_file(response)
    return render_template("core/talkgpt.html", response=response, audio_file_name=audio_file_name, chat_history



import boto3
from botocore.exceptions import ClientError

s3 = boto3.client('s3')

@core_bp.route("/play-audio", methods=["POST"])
def play_audio():
    response = request.form["response"]
    language = 'en'
    filename = str(uuid.uuid4())
    audio_path = f"audio/{filename}.mp3"
    polly_client = boto3.client('polly')
    response = polly_client.synthesize_speech(Text=response, OutputFormat='mp3', VoiceId='Joanna')
    try:
        s3.upload_fileobj(response['AudioStream'], BUCKET_NAME, audio_path)
        # Generate a pre-signed URL for the audio file with a 1-hour expiration time
        url = s3.generate_presigned_url('get_object', Params={'Bucket': BUCKET_NAME, 'Key': audio_path}, ExpiresIn=3600)
        return jsonify({'url': url})
    except ClientError as e:
        print(e)
        return jsonify({'error': 'Failed to upload audio to S3'})



<div class="card">
  <h2>We're Working to Improve Speech Synthesis</h2>
  <p>Dear valued users,</p>
  <p>We want to let you know that we are constantly working to improve our speech synthesis technology. While our current system is effective, we understand that there is always room for improvement.</p>
  <p>Our team of experts is working tirelessly to enhance the quality and accuracy of our speech synthesis. We are committed to providing you with the best possible user experience and we appreciate your patience as we work towards this goal.</p>
  <p>Thank you for your continued support and please feel free to contact us with any questions or feedback.</p>
  <p>Sincerely,<br>[Your Company Name]</p>
</div>


<style>
		.card {
			background-color: #f5f5f5;
			border-radius: 10px;
			box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
			padding: 20px;
			margin: 50px auto;
			max-width: 500px;
			text-align: center;
		}
		
		.title {
			font-size: 30px;
			font-weight: bold;
			margin-bottom: 30px;
			color: #555;
		}
		
		.message {
			font-size: 20px;
			color: #555;
			line-height: 1.5;
			margin-bottom: 30px;
		}
		
		.button {
			background-color: #007bff;
			color: #fff;
			border: none;
			border-radius: 5px;
			padding: 10px 20px;
			font-size: 18px;
			cursor: pointer;
			transition: background-color 0.3s ease;
		}
		
		.button:hover {
			background-color: #0062cc;
		}
	</style>

    